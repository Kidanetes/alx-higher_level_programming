""" test file which will test the function we
write to add two numbers
"""
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 2)
3
>>> add_integer(2)
100
>>> add_integer(15.5, 7)
22
>>> add_integer(15.5, 8.7)
23
>>> add_integer(-1, 6)
5
>>> add_integer(-7, -6)
-13
>>> add_integer()
Traceback (most recent call last):
  ...
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(None)
Traceback (most recent call last):
  ...
TypeError: a must be an integer
>>> add_integer(64, None)
Traceback (most recent call last):
  ...
TypeError: b must be an integer
>>> add_integer("hello", 5)
Traceback (most recent call last):
  ...
TypeError: a must be an integer
>>> add_integer("hello", "hi")
Traceback (most recent call last):
  ...
TypeError: a must be an integer
>>> add_integer(7, "hi")
Traceback (most recent call last):
  ...
TypeError: b must be an integer
>>> add_integer([1], [5])
Traceback (most recent call last):
  ...
TypeError: a must be an integer
>>> add_integer([])
Traceback (most recent call last):
  ...
TypeError: a must be an integer
>>> add_integer((1, ))
Traceback (most recent call last):
  ...
TypeError: a must be an integer
>>> add_integer(45, float('inf'))
Traceback (most recent call last):
  ...
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('inf'))
Traceback (most recent call last):
  ...
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('nan'))
Traceback (most recent call last):
  ...
ValueError: cannot convert float NaN to integer
>>> add_integer(67, float('nan'))
Traceback (most recent call last):
  ...
ValueError: cannot convert float NaN to integer
